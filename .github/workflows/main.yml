name: Deploy aws Infrastructure for ecs

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose whether to create or destroy resources'
        required: true
        default: 'create'
        type: choice
        options:
          - create_infra
          - destroy_infra

jobs:
  tf_fmt:
    name: Deploy Site
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repo
      uses: actions/checkout@v1
                                   # aws configuration.
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

    - name: Terraform Init
      run: terraform init
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GIT }}
        TF_ACTION_WORKING_DIR: '.'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    
    - name: Terraform Plan
      if: ${{ github.event.inputs.action == 'create_infra' }}
      run: terraform plan
      env:
       GITHUB_TOKEN: ${{ secrets.TOKEN_GIT }}
       TF_ACTION_WORKING_DIR: '.'
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      

    - name: Terraform Apply
      if: ${{ github.event.inputs.action == 'create_infra' }}
      run : terraform apply --auto-approve
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GIT }}
        TF_ACTION_WORKING_DIR: '.'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    # distroy terraform_infra
    
    - name: Terraform destroy 
      if: ${{ github.event.inputs.action == 'destroy_infra' }}
      run: terraform destroy --auto-approve
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GIT }}
        TF_ACTION_WORKING_DIR: '.'
        AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

